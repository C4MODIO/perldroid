## Toplevel Makefile for cross-compilation of perl
#
## $Id: Makefile,v 1.5 2003/12/12 00:48:19 red Exp red $

export TOPDIR=${shell pwd}
include $(TOPDIR)/config.android
export CFLAGS
export SYS=$(ARCH)-$(OS)
export CROSS=$(ARCH)-$(OS)-
export FULL_OPTIMIZATION = -fexpensive-optimizations -fomit-frame-pointer -O2
export OPTIMIZATION = -O2

export CC = agcc
export CXX = $(CROSS)g++
export LD = agcc
export STRIP = $(CROSS)strip
export AR = $(CROSS)ar
export RANLIB = $(CROSS)ranlib


## Optimisation work
ifeq ($(ARCH),arm)
 ifdef CONFIG_TARGET_ARM_SA11X0
   ifndef Architecture
     Architecture = armv4l-strongarm
   endif
   FULL_OPTIMIZATION += -march=armv4 -mtune=strongarm1100 -mapcs-32
   OPTIMIZATION += -march=armv4 -mtune=strongarm1100 -mapcs-32
 endif
 ifdef CONFIG_TARGET_ANDROID
   ifndef Architecture
     Architecture = armv5t-xscale
   endif
   FULL_OPTIMIZATION = -O2
   OPTIMIZATION = -O2
 endif
endif

CFLAGS+=$(FULL_OPTIMIZATION)

all:
	@echo Please read the README file before doing anything else.

gen_patch:
	rm -f Makefile.SH.android.patch
	! diff -Bbur ../Makefile.SH Makefile.SH.android > Makefile.SH.android.patch
	rm -f installperl.patch
	! diff -Bbur ../installperl installperl > installperl.patch
	rm -f perlio.c.android.patch
	! diff -Bbur ../perlio.c perlio.c.android > perlio.c.android.patch
	rm -f make_ext.android.patch
	! diff -Bbur ../ext/util/make_ext make_ext.android > make_ext.android.patch
	rm -f Errno_pm.PL.android.patch
	! diff -Bbur ../ext/Errno/Errno_pm.PL Errno_pm.PL.android > Errno_pm.PL.android.patch

patch:
	cd .. ; if [ ! -e ./CROSS_PATCHED ] ; then \
		patch -p1 < Cross/perlio.c.android.patch; \
		cd ext/Errno; patch -p3 < ../../Cross/Errno_pm.PL.android.patch; cd -; \
		cd ext/util; patch -p3 < ../../Cross/make_ext.android.patch; cd -; \
		patch -p1 < Cross/Makefile.SH.android.patch; \
		patch -p1 < Cross/installperl.patch; mv installperl installperl-patched; \
		sed -e 's/XXSTRIPXX/$(SYS)/' installperl-patched > installperl; \
		touch CROSS_PATCHED ; fi

perl:
	@echo Perl cross-build directory is $(TOPDIR)
	@echo Target arch is $(SYS)
	@echo toolchain: $(CC), $(CXX), $(LD), $(STRIP), $(AR), $(RANLIB)
	@echo Optimizations: $(FULL_OPTIMIZATION)

	cp -f config.sh-arm-eabi ../config.sh
	cp -f uudmap.h.android ../uudmap.h
	cd $(TOPDIR)/.. ; ./Configure -S ; make depend ; make ; make more
	cd $(TOPDIR)/.. ; mkdir -p fake_config_library ; cp lib/Config.pm lib/Config_heavy.pl fake_config_library
	cd $(TOPDIR)/.. ; $(MAKE) more2 "PERLRUN=/usr/bin/perl -I$(TOPDIR)/../fake_config_library -MConfig" "FULLPERLRUN=/usr/bin/perl -I$(TOPDIR)/../fake_config_library -MConfig"
	cd $(TOPDIR)/.. ; $(MAKE) more3 "PERLRUN=/usr/bin/perl -I$(TOPDIR)/../fake_config_library -MConfig" "FULLPERLRUN=/usr/bin/perl -I$(TOPDIR)/../fake_config_library -MConfig"
	cd $(TOPDIR)/.. ; $(MAKE) more4 "PERLRUN=/usr/bin/perl -I$(TOPDIR)/../fake_config_library -MConfig" "FULLPERLRUN=/usr/bin/perl -I$(TOPDIR)/../fake_config_library -MConfig"
	cd $(TOPDIR)/.. ; rm -rf install_me_here
	cd $(TOPDIR)/.. ; make install-strip
	cd $(TOPDIR)/.. ; sh -x Cross/warp


